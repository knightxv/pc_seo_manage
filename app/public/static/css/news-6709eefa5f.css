/* 只提供基础函数和变量 */
.flex {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}
.newsDetail_title {
  font-size: 18px;
  font-weight: bold;
  text-align: left;
  padding-bottom: 10px;
  border-bottom: 1px solid #e0e0e2;
}
.newDetail_time {
  color: #909090;
  font-size: 14px;
  padding: 10px 0;
}
.newDetail_container {
  padding: 20px;
}
.newDetail_content {
  font-size: 14px;
}
.newDetail_content img {
  max-width: 100%;
}
.newDetail_content p {
  margin: 0;
}
.news_item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  margin-top: 20px;
}
.news_item .new_content_wrap {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -ms-flex-item-align: stretch;
      align-self: stretch;
}
.news_item .news_img_wrap {
  -ms-flex-item-align: stretch;
      align-self: stretch;
}
.news_item .vv_news_img {
  width: 150px;
  height: 100%;
  margin-right: 10px;
  display: block;
}
.news_item .news_title {
  font-size: 18px;
  font-weight: bold;
}
.news_item .news_public_title {
  font-size: 14px;
  color: #909090;
  line-height: 30px;
}
.news_navigation {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}
.newsDetail_pageLink_wrap {
  padding-top: 20px;
}
.newDetail_pageLink {
  display: block;
  line-height: 30px;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5ld3MuY3NzIiwiYmFzZS5sZXNzIiwibmV3cy5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQjtBQ3VCaEI7RUFDRSxxQkFBQTtFQUFBLHFCQUFBO0VBQUEsY0FBQTtDRHJCRDtBRUFEO0VBQ0MsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLGlCQUFBO0VBQ0EscUJBQUE7RURTQyxpQ0FBQTtDRE5EO0FFQUQ7RUFDQyxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQkFBQTtDRkVBO0FFQUQ7RUFDQyxjQUFBO0NGRUE7QUVBRDtFQUNDLGdCQUFBO0NGRUE7QUVIRDtFQUdFLGdCQUFBO0NGR0Q7QUVORDtFQU1FLFVBQUE7Q0ZHRDtBRUNEO0VBQ0MscUJBQUE7RUFBQSxxQkFBQTtFQUFBLGNBQUE7RUFDQSwrQkFBQTtFQUFBLDhCQUFBO01BQUEsd0JBQUE7VUFBQSxvQkFBQTtFQUNBLDBCQUFBO01BQUEsdUJBQUE7VUFBQSxvQkFBQTtFQUNBLGlCQUFBO0NGQ0E7QUVMRDtFQU1FLHFCQUFBO0VBQUEscUJBQUE7RUFBQSxjQUFBO0VBQ0EsNkJBQUE7RUFBQSw4QkFBQTtNQUFBLDJCQUFBO1VBQUEsdUJBQUE7RUFDQSw2QkFBQTtNQUFBLG9CQUFBO0NGRUQ7QUVWRDtFQVdFLDZCQUFBO01BQUEsb0JBQUE7Q0ZFRDtBRWJEO0VBY0UsYUFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLGVBQUE7Q0ZFRDtBRW5CRDtFQW9CRSxnQkFBQTtFQUNBLGtCQUFBO0NGRUQ7QUV2QkQ7RUF3QkUsZ0JBQUE7RUFDQSxlQUFBO0VBQ0Esa0JBQUE7Q0ZFRDtBRUtEO0VBQ0MscUJBQUE7RUFBQSxxQkFBQTtFQUFBLGNBQUE7RUFDQSwrQkFBQTtFQUFBLDhCQUFBO01BQUEsd0JBQUE7VUFBQSxvQkFBQTtFQUNBLHlCQUFBO01BQUEsc0JBQUE7VUFBQSx3QkFBQTtDRkhBO0FFS0Q7RUFDQyxrQkFBQTtDRkhBO0FFS0Q7RUFDQyxlQUFBO0VBQ0Esa0JBQUE7Q0ZIQSIsImZpbGUiOiJuZXdzLTY3MDllZWZhNWYuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyog5Y+q5o+Q5L6b5Z+656GA5Ye95pWw5ZKM5Y+Y6YePICovXG4uZmxleCB7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG4ubmV3c0RldGFpbF90aXRsZSB7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIHBhZGRpbmctYm90dG9tOiAxMHB4O1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2UwZTBlMjtcbn1cbi5uZXdEZXRhaWxfdGltZSB7XG4gIGNvbG9yOiAjOTA5MDkwO1xuICBmb250LXNpemU6IDE0cHg7XG4gIHBhZGRpbmc6IDEwcHggMDtcbn1cbi5uZXdEZXRhaWxfY29udGFpbmVyIHtcbiAgcGFkZGluZzogMjBweDtcbn1cbi5uZXdEZXRhaWxfY29udGVudCB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn1cbi5uZXdEZXRhaWxfY29udGVudCBpbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7XG59XG4ubmV3RGV0YWlsX2NvbnRlbnQgcCB7XG4gIG1hcmdpbjogMDtcbn1cbi5uZXdzX2l0ZW0ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBtYXJnaW4tdG9wOiAyMHB4O1xufVxuLm5ld3NfaXRlbSAubmV3X2NvbnRlbnRfd3JhcCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLXNlbGY6IHN0cmV0Y2g7XG59XG4ubmV3c19pdGVtIC5uZXdzX2ltZ193cmFwIHtcbiAgYWxpZ24tc2VsZjogc3RyZXRjaDtcbn1cbi5uZXdzX2l0ZW0gLnZ2X25ld3NfaW1nIHtcbiAgd2lkdGg6IDE1MHB4O1xuICBoZWlnaHQ6IDEwMCU7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbiAgZGlzcGxheTogYmxvY2s7XG59XG4ubmV3c19pdGVtIC5uZXdzX3RpdGxlIHtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5uZXdzX2l0ZW0gLm5ld3NfcHVibGljX3RpdGxlIHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBjb2xvcjogIzkwOTA5MDtcbiAgbGluZS1oZWlnaHQ6IDMwcHg7XG59XG4ubmV3c19uYXZpZ2F0aW9uIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG4ubmV3c0RldGFpbF9wYWdlTGlua193cmFwIHtcbiAgcGFkZGluZy10b3A6IDIwcHg7XG59XG4ubmV3RGV0YWlsX3BhZ2VMaW5rIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGxpbmUtaGVpZ2h0OiAzMHB4O1xufVxuIiwiLyog5Y+q5o+Q5L6b5Z+656GA5Ye95pWw5ZKM5Y+Y6YePICovXHJcblxyXG5AYmFzZUNvbG9yOiAjNjhhOWU0O1xyXG5AYmdDb2xvcjogI2YxZjFmMTtcclxuQGhlYWRlckJnQ29sb3I6ICMzMTMxMzE7XHJcbkBncmF5OiAjOTA5MDkwO1xyXG5AY29udGFpbmVyX3dpZHRoOiAxMjYwcHg7XHJcblxyXG5cclxuLmJvcigpIHtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjZTBlMGUyO1xyXG59XHJcbi5ib3JUb3AoKSB7XHJcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlMGUwZTI7XHJcbn1cclxuLmJvckJvdCgpIHtcclxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2UwZTBlMjtcclxufVxyXG4uZl9jb250YWluZXIoKSB7XHJcbiAgbWF4LXdpZHRoOiA5NjBweDtcclxuICBtYXJnaW46IDAgYXV0bztcclxufVxyXG5cclxuLmZsZXgge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbn1cclxuLmZsZXhSb3coQGp1c3RpZnk6IGZsZXgtc3RhcnQpIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAganVzdGlmeS1jb250ZW50OiBAanVzdGlmeTtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4udGV4dF9oaWRlKCkge1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxufVxyXG5cclxuXHJcblxyXG4iLCJAaW1wb3J0IFwiLi9iYXNlLmxlc3NcIjtcclxuXHJcblxyXG4ubmV3c0RldGFpbF90aXRsZSB7XHJcblx0Zm9udC1zaXplOiAxOHB4O1xyXG5cdGZvbnQtd2VpZ2h0OiBib2xkO1xyXG5cdHRleHQtYWxpZ246IGxlZnQ7XHJcblx0cGFkZGluZy1ib3R0b206IDEwcHg7XHJcblx0LmJvckJvdCgpO1xyXG59XHJcbi5uZXdEZXRhaWxfdGltZSB7XHJcblx0Y29sb3I6IEBncmF5O1xyXG5cdGZvbnQtc2l6ZTogMTRweDtcclxuXHRwYWRkaW5nOiAxMHB4IDA7XHJcbn1cclxuLm5ld0RldGFpbF9jb250YWluZXIge1xyXG5cdHBhZGRpbmc6IDIwcHg7XHJcbn1cclxuLm5ld0RldGFpbF9jb250ZW50IHtcclxuXHRmb250LXNpemU6IDE0cHg7XHJcblx0aW1nIHtcclxuXHRcdG1heC13aWR0aDogMTAwJTtcclxuXHR9XHJcblx0cCB7XHJcblx0XHRtYXJnaW46IDA7XHJcblx0fVxyXG59XHJcblxyXG4ubmV3c19pdGVtIHtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHRtYXJnaW4tdG9wOiAyMHB4O1xyXG5cdC5uZXdfY29udGVudF93cmFwIHtcclxuXHRcdGRpc3BsYXk6IGZsZXg7XHJcblx0XHRmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG5cdFx0YWxpZ24tc2VsZjogc3RyZXRjaDtcclxuXHR9XHJcblx0Lm5ld3NfaW1nX3dyYXAge1xyXG5cdFx0YWxpZ24tc2VsZjogc3RyZXRjaDtcclxuXHR9XHJcblx0LnZ2X25ld3NfaW1nIHtcclxuXHRcdHdpZHRoOiAxNTBweDtcclxuXHRcdGhlaWdodDogMTAwJTtcclxuXHRcdG1hcmdpbi1yaWdodDogMTBweDtcclxuXHRcdGRpc3BsYXk6IGJsb2NrO1xyXG5cdH1cclxuXHQubmV3c190aXRsZSB7XHJcblx0XHRmb250LXNpemU6IDE4cHg7XHJcblx0XHRmb250LXdlaWdodDogYm9sZDtcclxuXHR9XHJcblx0Lm5ld3NfcHVibGljX3RpdGxlIHtcclxuXHRcdGZvbnQtc2l6ZTogMTRweDtcclxuXHRcdGNvbG9yOiBAZ3JheTtcclxuXHRcdGxpbmUtaGVpZ2h0OiAzMHB4O1xyXG5cdH1cclxuXHQubmV3c19jb250ZW50IHtcclxuXHJcblx0fVxyXG59XHJcblxyXG4ubmV3c19uYXZpZ2F0aW9uIHtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuLm5ld3NEZXRhaWxfcGFnZUxpbmtfd3JhcCB7XHJcblx0cGFkZGluZy10b3A6IDIwcHg7XHJcbn1cclxuLm5ld0RldGFpbF9wYWdlTGluayB7XHJcblx0ZGlzcGxheTogYmxvY2s7XHJcblx0bGluZS1oZWlnaHQ6IDMwcHg7XHJcbn1cclxuIl19 */
